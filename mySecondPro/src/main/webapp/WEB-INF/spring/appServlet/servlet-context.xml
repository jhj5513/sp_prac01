<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<annotation-driven />

	<resources mapping="/res/**" location="/resources/" />


	<!-- 뷰리졸버에 대한 등록 :: 기본 파일 시스템으로 연결 :: 타일즈 기반 -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<beans:bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/tiles-config.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="tilesviewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass"
			value="org.springframework.web.servlet.view.tiles2.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>

	<context:component-scan base-package="kr.kitri" />
	<context:component-scan base-package="test" />
	<context:component-scan base-package="emp" />
	<context:component-scan base-package="etc" />

	<!-- 추가 -->



	<beans:bean id="con"
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<beans:property name="jndiName" value="jdbc/myspring" />
		<beans:property name="resourceRef" value="true" />
	</beans:bean>

	<beans:bean id="template" class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:constructor-arg ref="con"></beans:constructor-arg>
	</beans:bean>

	<!-- mybatis -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="con" />
		<!--<beans:property name="mapperLocations" value="classpath:mapper/*.xml"></beans:property> -->
		<beans:property name="configLocation"
			value="/WEB-INF/config/mybatis-config.xml"></beans:property>
	</beans:bean>

	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg ref="sqlSessionFactory"></beans:constructor-arg>
	</beans:bean>


	<!-- 트랜잭션에 대한 처리 -->
	<!-- 1.spring 내부에서 jdbc를 이용할 때 트랜잭션 처리를 간편하게 작업할 수 있도록 지원되는 클래스를 등록 -->
	<beans:bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 이 작업을 왜 하는가??? :: db와 연결되어있어야 트렌젝션처리를 할 수 있고 커넥션에 있는 트랙잭션 관리메소드를 이용 -->
		<beans:property name="dataSource" ref="con" />
	</beans:bean>

	<!-- 2.트랜잭션에 대한 처리를 aop 적용 -->
	<!-- 1) Advice 등록(xml차원에서 등록 ) 트랜잭션을 xml로 처리하는 기법 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 트랜잭션에을 적용할 메소드에 대한 정보 -->
		<tx:attributes>
			<!-- insert error 발생시 exception -->
			<tx:method name="*insert" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>

	<!-- 2) aop2적용 -->
	<!-- 트랜잭션은 대부분 서비스에서 이루어짐? -->
	<aop:config proxy-target-class="true">
		<aop:pointcut expression="execution(public * emp.service.MyEmpServiceImpl.*(..))"
			id="trans" />
		<aop:advisor id="txadvisor" advice-ref="txAdvice"
			pointcut-ref="trans" />
	</aop:config>

	<!-- 인터셉터 등록 -->
	<interceptors>
		<interceptor>
			<mapping path="/emp/*" />
			<beans:bean class="etc.controller.TimeCheckInterceptor"></beans:bean>
		</interceptor>

		<interceptor>
			<mapping path="/mybatislist.do" />
			<mapping path="/mybatissearch.do" />
			<beans:bean class="etc.controller.LoginCheckInterceptor"></beans:bean>
		</interceptor>
	</interceptors>

	<!-- ===========================다국어 지원============================== -->
	<beans:bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basenames">
			<beans:list>
				<beans:value>/WEB-INF/message/message</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="defaultEncoding" value="UTF-8" />
	</beans:bean>


	<!-- Locale정보를 확인하기 위한 클래스 등록( 쿠키 정보에서 Locale정보에 등록 -->
	<beans:bean id="localResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
	</beans:bean>


</beans:beans>



